<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.win.dao.DevMapper">
	<select id="loginDev" resultType="DevUser">
		select * from dev_user where
		devCode =#{devCode} and devPassword=#{devPassword}
	</select>
	<select id="selectAppInfoList" resultType="AppInfo">
		select *,(select
		categoryName from app_category where id=categoryLevel1
		)
		categoryLevel1Name ,
		(select categoryName from app_category where
		id=categoryLevel2 )
		categoryLevel2Name ,
		(select categoryName from
		app_category where id=categoryLevel3 )
		categoryLevel3Name ,
		(select
		valueName from data_dictionary WHERE typeCode='APP_FLATFORM' and
		valueId=flatformId) flatformName,
		(select valueName from
		data_dictionary where typeCode='APP_STATUS' and
		valueId=status)
		statusName,
		(select versionNo from app_version where appId=app_info.id
		and
		id=app_info.versionId) versionNo
		from app_info
		where
		devid=#{ai.devId}
		<if test="ai.status!=null">and status=#{ai.status} </if>
		<if test="ai.flatformId!=null">and flatformId =#{ai.flatformId} </if>
		<if test="ai.categoryLevel1!=null"> and categoryLevel1 =#{ai.categoryLevel1}</if>
		<if test="ai.categoryLevel2!=null">and categoryLevel2=#{ai.categoryLevel2}</if>
		<if test="ai.categoryLevel3!=null">and categoryLevel3=#{ai.categoryLevel3} </if>
		<if test="ai.softwareName!=null"> and softwareName like concat('%',#{ai.softwareName},'%')
		</if>
		<if test="ai.id!=null"> and id=#{ai.id}</if>
		order by id
		limit #{begin},#{end};
	</select>
	<select id="selectAppCount" resultType="int">
		select count(*) from app_info
		where devid=#{devId}
		<if test="status!=null">and status=#{status} </if>
		<if test="flatformId!=null">and flatformId =#{flatformId} </if>
		<if test="categoryLevel1!=null"> and categoryLevel1 =#{categoryLevel1}</if>
		<if test="categoryLevel2!=null">and categoryLevel2=#{categoryLevel2}</if>
		<if test="categoryLevel3!=null">and categoryLevel3=#{categoryLevel3} </if>
		<if test="softwareName!=null"> and softwareName like concat('%',#{softwareName},'%')
		</if>
	</select>
	<select id="dataDictionary" resultType="DataDictionary">
		select * from
		data_dictionary
		<where>
			<if test="typeCode=='APP_FLATFORM'">
				typeCode='APP_FLATFORM'
			</if>
			<if test="typeCode=='APP_STATUS'">
				typeCode='APP_STATUS'
			</if>
		</where>
	</select>
	<select id="categoryLevelList" resultType="AppCategory">
		select * from
		app_category
		<where>
			<if test="id!=null">
				parentId=#{id}
			</if>
			<if test="id==null">
				parentId is null
			</if>
		</where>
	</select>
	<select id="existAppName" resultType="int">
		select count(*) from
		app_info where APKName =#{APKName}
	</select>
	<select id="appVersionList" resultType="AppVersion">
		select
		*,(select APKName
		from app_info
		where app_info.id=app_version.appId)
		appName,versionNo,versionSize,(select valueName from data_dictionary
		where typeCode='APP_STATUS' and
		data_dictionary.valueId=app_version.publishStatus) publishStatusName
		from app_version where appId=#{appId} order by id desc;

	</select>
	<insert id="appinfoaddsave">
		INSERT INTO appinfodb.app_info (softwareName,
		APKName, supportROM,
		interfaceLanguage, softwareSize, updateDate,
		devId, appInfo, status,
		onSaleDate, offSaleDate, flatformId,
		categoryLevel3, downloads,
		createdBy, creationDate, modifyBy,
		modifyDate, categoryLevel1,
		categoryLevel2, logoPicPath, logoLocPath,
		versionId)
		VALUES (#{softwareName}, #{APKName},
		#{supportROM},#{interfaceLanguage},
		#{softwareSize}, null, #{devId},
		#{appInfo}, #{status}, null, null,
		#{flatformId}, #{categoryLevel3},
		#{downloads}, #{createdBy }, NOW(),
		NULL, null, #{categoryLevel1},
		#{categoryLevel2}, #{logoPicPath},
		#{logoLocPath}, NULL);
	</insert>
	<insert id="addversionsave" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO appinfodb.app_version (appId, versionNo,
		versionInfo,
		publishStatus, downloadLink, versionSize, createdBy,
		creationDate,
		modifyBy, modifyDate, apkLocPath, apkFileName) VALUES
		(#{appId},
		#{versionNo}, #{versionInfo},
		#{publishStatus},#{downloadLink},
		#{versionSize}, #{createdBy}, NOW(),
		null, null, #{apkLocPath},
		#{apkFileName});
	</insert>
	<delete id="delfile">
		<if test="flag=='apk'">
			update app_version set apkFileName="" where id=#{id};
		</if>
		<if test="flag=='logo'">
			update app_info set logoPicPath="" where id=#{id}
		</if>
	</delete>
	<update id="appversionmodifysave">
		UPDATE appinfodb.app_version SET versionInfo =
		#{versionInfo}, publishStatus
		= #{publishStatus}, downloadLink =
		#{publishStatus}, versionSize =
		#{versionSize}, modifyBy = #{modifyBy},
		modifyDate = NOW(), apkLocPath
		= #{apkLocPath}, apkFileName =
		#{apkFileName} WHERE id = #{id} and
		appId=#{appId};
	</update>
	<update id="appinfomodifysave">
		UPDATE appinfodb.app_info SET softwareName =
		#{softwareName}, supportROM =
		#{supportROM}, interfaceLanguage =
		#{interfaceLanguage}, softwareSize
		= #{softwareSize}, updateDate =
		NOW(), appInfo = #{appInfo},
		status = 1, flatformId = #{flatformId},
		categoryLevel3 = #{categoryLevel3},
		downloads = #{downloads}, modifyBy
		= #{modifyBy}, modifyDate = NOW(),
		categoryLevel1 = #{categoryLevel1},
		categoryLevel2 = #{categoryLevel2}, logoPicPath = #{logoPicPath} WHERE
		id = #{id}
		and APKName=#{APKName};
	</update>
	<delete id="delappInfo">
		delete from app_info where id=#{id}
	</delete>
	<delete id="delVersion">
		delete from app_version where appId=#{appId}
	</delete>
	<update id="updAppInfoVersion">
		update app_info set versionId=#{versionId} where
		id=#{id}
	</update>
	<update id="sale">
		<!-- 4上架 5下架 -->
		update app_info
		<if test="type=='open'">set status=4</if>
		<if test="type=='close'">set status=5</if>
		where id=#{id}
	</update>
</mapper> 